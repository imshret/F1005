@model F1005.Models.Insurances

@section Styles
	{
	<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

}
	<div class="col-lg-12">
		@using (Html.BeginForm())
		{
			@Html.AntiForgeryToken()

		<div class="form-horizontal col-md-6" id="form">
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })



			<div class="form-group">
				@Html.LabelFor(model => model.InsuranceName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.InsuranceName, new { htmlAttributes = new { @class = "form-control", id = "InsuranceName" } })
					@Html.ValidationMessageFor(model => model.InsuranceName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control", id = "PurchaseDate", type = "date" } })
					@Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.WithdrawDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.WithdrawDate, new { htmlAttributes = new { @class = "form-control", id = "WithdrawDate", type = "date" } })
					@Html.ValidationMessageFor(model => model.WithdrawDate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PaymentPerYear, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PaymentPerYear, new { htmlAttributes = new { @class = "form-control", id = "PaymentPerYear" } })
					@Html.ValidationMessageFor(model => model.PaymentPerYear, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PayYear, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PayYear, new { htmlAttributes = new { @class = "form-control", id = "PayYear" } })
					@Html.ValidationMessageFor(model => model.PayYear, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Withdrawal, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Withdrawal, new { htmlAttributes = new { @class = "form-control", id = "Withdrawal"} })
					@Html.ValidationMessageFor(model => model.Withdrawal, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.RelateCash, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="col-md-6">
						@Html.RadioButtonFor(model => model.RelateCash, true, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })
						<span>是,我想從現金資產扣款</span>
					</div>
					<div class="col-md-6">
						@Html.RadioButtonFor(model => model.RelateCash, false, new { htmlAttributes = new { @class = "form-control", id = "RelateCash" } })
						<span>否,直接加入這筆保單</span>
					</div>
						@Html.ValidationMessageFor(model => model.RelateCash, "", new { @class = "text-danger" })
					</div>
				</div>

			<div class="form-group col-md-12 ">
					<div class="col-md-offset-6 ">
						<input type="submit" value="確認新增" class="btn btn-default" />
					</div>
				</div>
			</div>
		}
		<div class="form-horizontal col-md-6">
			<br />
			<br />
			<button class="btn" id="GetIRR" >試算報酬</button>
			<h4 style="font-family:'Microsoft JhengHei'" id="IRR">	</h4>
			<div class="container" style="background-color:lavenderblush">
				<div class="col-md-6 " id="xx">
					<canvas id="IRRchart"></canvas>
				</div>
			</div>
		</div>
	</div>

<div>
	@Html.ActionLink("回到保險首頁", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
	<script src="~/Scripts/jquery-3.3.1.min.js"></script>

	<script>
		function GetIRR() {
			var para =
			{
				"PurchaseDate": $('#PurchaseDate').val(),
				"WithdrawDate": $('#WithdrawDate').val(),
				"PayYear": $('#PayYear').val(),
				"PaymentPerYear": $('#PaymentPerYear').val(),
				"Withdrawal": $('#Withdrawal').val()
			}
			$.ajax({
				type: "POST",
				url:" @Url.Action("CalculateIRR", "Insurances")",
				data: para
			}).done(function (result) {
				$('#IRR').text("IRR-內部報酬率:"+(result * 100).toFixed(2)+"%");
				var startyear = parseInt($('#PurchaseDate').val().substr(0, 4));
				var totalyears = parseInt($('#WithdrawDate').val().substr(0, 4)) - parseInt($('#PurchaseDate').val().substr(0, 4))-1;
				var payyears = parseInt($('#PayYear').val());
				var paymentperyear = parseInt($('#PaymentPerYear').val());
				var ratio = parseFloat(result)+1;
				var MyDate = [];
				var MyAmount = [];
				for (var i = 0; i <= totalyears+1; i++) {
					MyDate.push((startyear + i).toString());
				};
				MyAmount.push(paymentperyear);
				for (var i = 0; i < payyears-1; i++)
				{
					MyAmount.push((paymentperyear + MyAmount[i] * ratio));
				};
				for (var i = payyears; i <= totalyears+1; i++)
				{
					MyAmount.push((MyAmount[i - 1] * ratio));
				};

				for (var i = 0; i < MyAmount.length; i++)
				{
					MyAmount[i] = MyAmount[i].toFixed(0);
					MyAmount[i] = MyAmount[i].toString();
				}
				var MyBackground = [];
				var MyBorder = [];
				for (var i = 0; i < MyAmount.length; i++)
				{
					MyBackground.push('rgba(54, 162, 235, 0.5)');
					MyBorder.push('rgba(54, 162, 235, 1)');
				}


					var ctx = document.getElementById("IRRchart").getContext("2d");
				var myBarChart = new Chart(ctx, {
					type: 'bar',
					data: {
						labels: MyDate,
						datasets: [{
							label:  "年度保單價值",
							data: MyAmount,
							backgroundColor: MyBackground,
							borderColor: MyBorder,
							borderWidth: 2
						}]
					},
					options: {
						scales: {
							yAxes: [
								{
									ticks: { beginAtZero: true }
								}],
						}
					}
				});
			}).fail(function (err) {
				alert(err.responseText);
			});
		}

		$(document).ready(function () {
			$('#GetIRR').click(GetIRR);
		});
	</script>
}
